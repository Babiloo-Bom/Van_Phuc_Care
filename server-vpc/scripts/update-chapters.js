/**
 * Script to update course chapters via API
 * Run with: node scripts/update-chapters.js
 */

const fetch = require('node-fetch');

const API_BASE = 'http://localhost:3000/api/a';

// Chapters data
const chaptersData = {
  chapters: [
    {
      title: "Ch∆∞∆°ng 1: Gi·ªõi thi·ªáu v·ªÅ Python v√† Data Science",
      description: "T√¨m hi·ªÉu c∆° b·∫£n v·ªÅ Python v√† c√°c th∆∞ vi·ªán quan tr·ªçng",
      lessons: [
        { title: "B√†i 1: C√†i ƒë·∫∑t Python v√† Jupyter Notebook", duration: 30, type: "video" },
        { title: "B√†i 2: C√∫ ph√°p c∆° b·∫£n Python", duration: 45, type: "video" },
        { title: "B√†i 3: C·∫•u tr√∫c d·ªØ li·ªáu trong Python", duration: 60, type: "video" },
        { title: "B√†i 4: Quiz - Ki·ªÉm tra ki·∫øn th·ª©c ch∆∞∆°ng 1", duration: 15, type: "quiz" }
      ]
    },
    {
      title: "Ch∆∞∆°ng 2: Th∆∞ vi·ªán Pandas cho x·ª≠ l√Ω d·ªØ li·ªáu",
      description: "H·ªçc c√°ch s·ª≠ d·ª•ng Pandas ƒë·ªÉ ƒë·ªçc, x·ª≠ l√Ω v√† ph√¢n t√≠ch d·ªØ li·ªáu",
      lessons: [
        { title: "B√†i 5: Gi·ªõi thi·ªáu Pandas v√† DataFrame", duration: 40, type: "video" },
        { title: "B√†i 6: ƒê·ªçc v√† ghi d·ªØ li·ªáu v·ªõi Pandas", duration: 50, type: "video" },
        { title: "B√†i 7: L√†m s·∫°ch d·ªØ li·ªáu (Data Cleaning)", duration: 70, type: "video" },
        { title: "B√†i 8: Th·ª±c h√†nh v·ªõi dataset th·ª±c t·∫ø", duration: 90, type: "video" },
        { title: "B√†i 9: Quiz - Pandas c∆° b·∫£n", duration: 20, type: "quiz" }
      ]
    },
    {
      title: "Ch∆∞∆°ng 3: Tr·ª±c quan h√≥a d·ªØ li·ªáu v·ªõi Matplotlib v√† Seaborn",
      description: "T·∫°o c√°c bi·ªÉu ƒë·ªì v√† ƒë·ªì th·ªã ƒë·ªÉ hi·ªÉn th·ªã d·ªØ li·ªáu",
      lessons: [
        { title: "B√†i 10: Gi·ªõi thi·ªáu Matplotlib", duration: 35, type: "video" },
        { title: "B√†i 11: V·∫Ω bi·ªÉu ƒë·ªì c∆° b·∫£n", duration: 45, type: "video" },
        { title: "B√†i 12: Seaborn cho visualization n√¢ng cao", duration: 55, type: "video" },
        { title: "B√†i 13: T·∫°o dashboard ƒë∆°n gi·∫£n", duration: 80, type: "video" }
      ]
    },
    {
      title: "Ch∆∞∆°ng 4: Machine Learning c∆° b·∫£n v·ªõi Scikit-learn",
      description: "√Åp d·ª•ng c√°c thu·∫≠t to√°n ML ƒë·ªÉ d·ª± ƒëo√°n v√† ph√¢n lo·∫°i",
      lessons: [
        { title: "B√†i 14: Gi·ªõi thi·ªáu Machine Learning", duration: 40, type: "video" },
        { title: "B√†i 15: Linear Regression", duration: 60, type: "video" },
        { title: "B√†i 16: Classification v·ªõi Random Forest", duration: 70, type: "video" },
        { title: "B√†i 17: ƒê√°nh gi√° m√¥ h√¨nh ML", duration: 50, type: "video" },
        { title: "B√†i 18: D·ª± √°n cu·ªëi kh√≥a", duration: 120, type: "project" }
      ]
    }
  ]
};

async function updateCourseChapters() {
  try {
    console.log('üöÄ Starting to update course chapters...');
    
    const response = await fetch(`${API_BASE}/courses/phan-tich-du-lieu-voi-python/chapters`, {
      method: 'PUT',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify(chaptersData)
    });

    const result = await response.json();
    
    if (response.ok) {
      console.log('‚úÖ Successfully updated course chapters');
      console.log('üìö Course:', result.data?.course?.title);
      console.log('üìñ Chapters:', result.data?.course?.chapters?.length || 0);
    } else {
      console.error('‚ùå Failed to update course chapters:', result);
    }
  } catch (error) {
    console.error('‚ùå Error updating course chapters:', error);
  }
}

// Run the script
updateCourseChapters();
