name: Build and Push Docker Images

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_PREFIX: babiloo-bom/vanphuccare

jobs:
  # Detect which services changed
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      api: ${{ steps.filter.outputs.api }}
      admin: ${{ steps.filter.outputs.admin }}
      crm: ${{ steps.filter.outputs.crm }}
      elearning: ${{ steps.filter.outputs.elearning }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Check for changes
        uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            api:
              - 'server-vpc/**'
            admin:
              - 'admin-vpc-v3/**'
            crm:
              - 'crm-vpc-v3/**'
            elearning:
              - 'elerning-vpc-v3/**'

  build-and-push:
    needs: detect-changes
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: api
            context: ./server-vpc
            dockerfile: ./server-vpc/Dockerfile
            changed: ${{ needs.detect-changes.outputs.api }}
          - name: admin
            context: ./admin-vpc-v3
            dockerfile: ./admin-vpc-v3/Dockerfile
            changed: ${{ needs.detect-changes.outputs.admin }}
          - name: crm
            context: ./crm-vpc-v3
            dockerfile: ./crm-vpc-v3/Dockerfile
            changed: ${{ needs.detect-changes.outputs.crm }}
          - name: elearning
            context: ./elerning-vpc-v3
            dockerfile: ./elerning-vpc-v3/Dockerfile
            changed: ${{ needs.detect-changes.outputs.elearning }}
    
    # Only run if this service changed
    if: ${{ matrix.changed == 'true' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}-${{ matrix.name }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push ${{ matrix.name }}
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.dockerfile }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}-${{ matrix.name }}:buildcache
          cache-to: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}-${{ matrix.name }}:buildcache,mode=max
          build-args: |
            NODE_ENV=production

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Deploy to Server
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: 24700
          script: |
            cd /opt/vanphuccare
            ./deploy.sh production