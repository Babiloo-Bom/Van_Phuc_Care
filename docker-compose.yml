# ============================================
# Van Phuc Care - Docker Compose
# 3 Nuxt 3 Applications + Nginx
# ============================================

services:
  # ============================================
  # Backend API Server (Port 3000)
  # ============================================
  api:
    build:
      context: ./server-vpc
      dockerfile: Dockerfile
      args:
        - NODE_ENV=production
    container_name: vpc-api
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - MONGODB_URI=${MONGODB_URI:-mongodb://admin:vanphuccare2025@mongodb:27017/vanphuccare?authSource=admin}
      - JWT_SECRET=${JWT_SECRET:-your_jwt_secret_here}
      - JWT_ADMIN_SECRET=${JWT_ADMIN_SECRET:-your_jwt_admin_secret_here}
      - JWT_USER_SECRET=${JWT_USER_SECRET:-your_jwt_user_secret_here}
      - JWT_EXPIRE=${JWT_EXPIRE:-7d}
      # SMTP Configuration
      - SMTP_HOST=${SMTP_HOST:-smtp.gmail.com}
      - SMTP_PORT=${SMTP_PORT:-587}
      - SMTP_SECURE=${SMTP_SECURE:-false}
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASS=${SMTP_PASS}
      - SMTP_FROM_NAME=${SMTP_FROM_NAME:-Van Phuc Care}
      - SMTP_FROM_EMAIL=${SMTP_FROM_EMAIL}
      # MinIO Configuration
      - MINIO_ENDPOINT=minio
      - MINIO_PORT=9000
      - MINIO_USE_SSL=false
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY:-minioadmin}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY:-minioadmin}
      - MINIO_BUCKET_NAME=${MINIO_BUCKET_NAME:-van-phuc-care}
    networks:
      - vpc-network
    depends_on:
      - mongodb
      - minio
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # ============================================
  # MongoDB Database
  # ============================================
  mongodb:
    image: mongo:7-jammy
    container_name: vpc-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USERNAME:-admin}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD:-vanphuccare2025}
      - MONGO_INITDB_DATABASE=vanphuccare
    volumes:
      - mongodb-data:/data/db
      - mongodb-config:/data/configdb
    networks:
      - vpc-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 60s
      timeout: 20s
      retries: 5
      start_period: 60s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # ============================================
  # MinIO Object Storage
  # ============================================
  minio:
    image: minio/minio:latest
    container_name: vpc-minio
    restart: unless-stopped
    ports:
      - "9000:9000" # S3 API
      - "9001:9001" # Console UI
    environment:
      - MINIO_ROOT_USER=${MINIO_ACCESS_KEY:-minioadmin}
      - MINIO_ROOT_PASSWORD=${MINIO_SECRET_KEY:-minioadmin}
    command: server /data --console-address ":9001"
    volumes:
      - minio-data:/data
    networks:
      - vpc-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # ============================================
  # Admin Portal (Port 3100)
  # ============================================
  admin:
    build:
      context: ./admin-vpc-v3
      dockerfile: Dockerfile
      args:
        - NODE_ENV=production
    container_name: vpc-admin
    restart: unless-stopped
    ports:
      - "3100:3000"
    environment:
      - NODE_ENV=production
      - NUXT_PUBLIC_API_HOST=http://localhost:3000
      - NUXT_PUBLIC_API_BASE=http://localhost:3000/api/a
      - NUXT_API_HOST_INTERNAL=http://api:3000
      - NUXT_PUBLIC_TINYMCE_KEY=${TINYMCE_KEY}
      - NUXT_PUBLIC_APP_NAME=Admin Portal - Van Phuc Care
      - NUXT_PUBLIC_APP_URL=http://localhost:3100
      # Google OAuth Configuration
      - NUXT_PUBLIC_GOOGLE_CLIENT_ID=${NUXT_PUBLIC_GOOGLE_CLIENT_ID}
      - NUXT_GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - NUXT_PUBLIC_BASE_URL=http://localhost:3100
    networks:
      - vpc-network
    depends_on:
      - api
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/api/_health', (r) => {process.exit(r.statusCode === 200 ? 0 : 1)})"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # ============================================
  # CRM Portal (Port 3101)
  # ============================================
  crm:
    build:
      context: ./crm-vpc-v3
      dockerfile: Dockerfile
      args:
        - NODE_ENV=production
    container_name: vpc-crm
    restart: unless-stopped
    ports:
      - "3101:3000"
    environment:
      - NODE_ENV=production
      - NUXT_PUBLIC_API_HOST=http://localhost:3000
      - NUXT_PUBLIC_API_BASE=http://localhost:3000/api/a
      - NUXT_API_HOST_INTERNAL=http://api:3000
      - NUXT_PUBLIC_TINYMCE_KEY=${TINYMCE_KEY}
      - NUXT_PUBLIC_APP_NAME=CRM Portal - Van Phuc Care
      - NUXT_PUBLIC_APP_URL=http://localhost:3101
      # Google OAuth Configuration
      - NUXT_PUBLIC_GOOGLE_CLIENT_ID=${NUXT_PUBLIC_GOOGLE_CLIENT_ID}
      - NUXT_GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - NUXT_PUBLIC_BASE_URL=http://localhost:3101
    networks:
      - vpc-network
    depends_on:
      - api
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/api/_health', (r) => {process.exit(r.statusCode === 200 ? 0 : 1)})"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # ============================================
  # E-Learning Portal (Port 3102)
  # ============================================
  elearning:
    build:
      context: ./elerning-vpc-v3
      dockerfile: Dockerfile
      args:
        - NODE_ENV=production
    container_name: vpc-elearning
    restart: unless-stopped
    ports:
      - "3102:3000"
    environment:
      - NODE_ENV=production
      - NUXT_PUBLIC_API_HOST=http://localhost:3000
      - NUXT_PUBLIC_API_BASE=http://localhost:3000/api/a
      - NUXT_API_HOST_INTERNAL=http://api:3000
      - NUXT_PUBLIC_TINYMCE_KEY=${TINYMCE_KEY}
      - NUXT_PUBLIC_APP_NAME=E-Learning Portal - Van Phuc Care
      - NUXT_PUBLIC_APP_URL=http://localhost:3102
      # Google OAuth Configuration
      - NUXT_PUBLIC_GOOGLE_CLIENT_ID=${NUXT_PUBLIC_GOOGLE_CLIENT_ID}
      - NUXT_GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - NUXT_PUBLIC_BASE_URL=http://localhost:3102
    networks:
      - vpc-network
    depends_on:
      - api
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/api/_health', (r) => {process.exit(r.statusCode === 200 ? 0 : 1)})"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # ============================================
  # Nginx Reverse Proxy (Optional)
  # ============================================
  nginx:
    image: nginx:alpine
    container_name: vpc-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - admin
      - crm
      - elearning
      - api
      - minio
    networks:
      - vpc-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

# ============================================
# Networks
# ============================================
networks:
  vpc-network:
    driver: bridge
    name: van-phuc-care-network

# ============================================
# Volumes
# ============================================
volumes:
  mongodb-data:
    name: vpc-mongodb-data
  mongodb-config:
    name: vpc-mongodb-config
  admin-data:
  crm-data:
  elearning-data:
  minio-data:
    name: vpc-minio-data


